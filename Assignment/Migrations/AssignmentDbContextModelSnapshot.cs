// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assignment.Migrations
{
    [DbContext(typeof(AssignmentDbContext))]
    partial class AssignmentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("Domain.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Customer", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = ""
                        },
                        new
                        {
                            Id = 2,
                            Name = "IMT"
                        },
                        new
                        {
                            Id = 3,
                            Name = "FWH"
                        },
                        new
                        {
                            Id = 4,
                            Name = "DNV"
                        });
                });

            modelBuilder.Entity("Domain.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT")
                        .HasColumnName("Price");

                    b.HasKey("Id");

                    b.ToTable("Package", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "10 health check-up items",
                            Name = "Basic",
                            Price = 99.99m
                        },
                        new
                        {
                            Id = 2,
                            Description = "15 health check-up items",
                            Name = "Standard",
                            Price = 129.99m
                        },
                        new
                        {
                            Id = 3,
                            Description = "20 health check-up items",
                            Name = "Advanced",
                            Price = 149.99m
                        });
                });

            modelBuilder.Entity("Domain.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<int?>("BuyingXQuantity")
                        .HasColumnType("INTEGER")
                        .HasColumnName("BuyingXQuantity");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<decimal?>("DiscountedPrice")
                        .HasColumnType("TEXT")
                        .HasColumnName("DiscountedPrice");

                    b.Property<int>("PackageId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("PackageId");

                    b.Property<int?>("PayingYQuantity")
                        .HasColumnType("INTEGER")
                        .HasColumnName("PayingYQuantity");

                    b.Property<int>("PromotionType")
                        .HasColumnType("INTEGER")
                        .HasColumnName("PromotionType");

                    b.HasKey("Id");

                    b.ToTable("Promotion", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuyingXQuantity = 6,
                            Description = "Get a 6 of 4 for Basic Package",
                            PackageId = 1,
                            PayingYQuantity = 4,
                            PromotionType = 1
                        },
                        new
                        {
                            Id = 2,
                            BuyingXQuantity = 10,
                            Description = "Get a 10 of 5 for Standard Package",
                            PackageId = 2,
                            PayingYQuantity = 5,
                            PromotionType = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "On Advanced Package get the price drops to $139.99",
                            DiscountedPrice = 139.99m,
                            PackageId = 3,
                            PromotionType = 0
                        });
                });

            modelBuilder.Entity("Domain.PromotionProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CustomerId");

                    b.Property<int>("PromotionId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("PromotionId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PromotionId")
                        .IsUnique();

                    b.ToTable("PromotionProgram", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 2,
                            PromotionId = 1
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 3,
                            PromotionId = 3
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 4,
                            PromotionId = 2
                        });
                });

            modelBuilder.Entity("Domain.PromotionProgram", b =>
                {
                    b.HasOne("Domain.Customer", "Customer")
                        .WithMany("PromotionPrograms")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Promotion", "Promotion")
                        .WithOne("PromotionProgram")
                        .HasForeignKey("Domain.PromotionProgram", "PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("Domain.Customer", b =>
                {
                    b.Navigation("PromotionPrograms");
                });

            modelBuilder.Entity("Domain.Promotion", b =>
                {
                    b.Navigation("PromotionProgram")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
